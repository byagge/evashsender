#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å—é –ø–∏—Å–µ–º
"""

import os
import sys
import socket
import dns.resolver
import dns.reversename
from django.conf import settings
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings.local')
django.setup()

def check_rdns(ip_address):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ DNS –¥–ª—è IP –∞–¥—Ä–µ—Å–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π DNS
        reverse_name = dns.reversename.from_address(ip_address)
        answers = dns.resolver.resolve(reverse_name, "PTR")
        rdns_name = str(answers[0])
        print(f"‚úÖ rDNS –¥–ª—è {ip_address}: {rdns_name}")
        return rdns_name
    except Exception as e:
        print(f"‚ùå rDNS –¥–ª—è {ip_address}: –û–®–ò–ë–ö–ê - {e}")
        return None

def check_forward_dns(hostname):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä—è–º–æ–≥–æ DNS –¥–ª—è —Ö–æ—Å—Ç–∞"""
    try:
        answers = dns.resolver.resolve(hostname, "A")
        ip_addresses = [str(answer) for answer in answers]
        print(f"‚úÖ –ü—Ä—è–º–æ–π DNS –¥–ª—è {hostname}: {ip_addresses}")
        return ip_addresses
    except Exception as e:
        print(f"‚ùå –ü—Ä—è–º–æ–π DNS –¥–ª—è {hostname}: –û–®–ò–ë–ö–ê - {e}")
        return []

def check_spf_record(domain):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SPF –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞"""
    try:
        answers = dns.resolver.resolve(domain, "TXT")
        spf_records = [str(answer) for answer in answers if 'v=spf1' in str(answer)]
        if spf_records:
            print(f"‚úÖ SPF –¥–ª—è {domain}: {spf_records}")
            return spf_records
        else:
            print(f"‚ö†Ô∏è  SPF –¥–ª—è {domain}: –ù–ï –ù–ê–ô–î–ï–ù")
            return []
    except Exception as e:
        print(f"‚ùå SPF –¥–ª—è {domain}: –û–®–ò–ë–ö–ê - {e}")
        return []

def check_dkim_record(domain, selector='ep1'):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ DKIM –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞"""
    try:
        dkim_domain = f"{selector}._domainkey.{domain}"
        answers = dns.resolver.resolve(dkim_domain, "TXT")
        dkim_records = [str(answer) for answer in answers if 'v=DKIM1' in str(answer)]
        if dkim_records:
            print(f"‚úÖ DKIM –¥–ª—è {domain}: {dkim_records}")
            return dkim_records
        else:
            print(f"‚ö†Ô∏è  DKIM –¥–ª—è {domain}: –ù–ï –ù–ê–ô–î–ï–ù")
            return []
    except Exception as e:
        print(f"‚ùå DKIM –¥–ª—è {domain}: –û–®–ò–ë–ö–ê - {e}")
        return []

def check_mx_record(domain):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ MX –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞"""
    try:
        answers = dns.resolver.resolve(domain, "MX")
        mx_records = [(str(answer.exchange), answer.preference) for answer in answers]
        print(f"‚úÖ MX –¥–ª—è {domain}: {mx_records}")
        return mx_records
    except Exception as e:
        print(f"‚ùå MX –¥–ª—è {domain}: –û–®–ò–ë–ö–ê - {e}")
        return []

def get_server_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ IP –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP
        import requests
        response = requests.get('https://api.ipify.org', timeout=5)
        external_ip = response.text
        print(f"üåê –í–Ω–µ—à–Ω–∏–π IP —Å–µ—Ä–≤–µ—Ä–∞: {external_ip}")
        return external_ip
    except:
        # Fallback - –ø–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP
        hostname = socket.gethostname()
        local_ip = socket.gethostbyname(hostname)
        print(f"üè† –õ–æ–∫–∞–ª—å–Ω—ã–π IP —Å–µ—Ä–≤–µ—Ä–∞: {local_ip}")
        return local_ip

def main():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ—Å—Ç—å—é –ø–∏—Å–µ–º")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
    server_ip = get_server_ip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º rDNS
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ rDNS:")
    rdns_name = check_rdns(server_ip)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π DNS –¥–ª—è mail.vashsender.ru
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –¥–ª—è mail.vashsender.ru:")
    mail_ips = check_forward_dns('mail.vashsender.ru')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω vashsender.ru
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞ vashsender.ru:")
    check_spf_record('vashsender.ru')
    check_dkim_record('vashsender.ru')
    check_mx_record('vashsender.ru')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    print(f"SMTP Host: {settings.EMAIL_HOST}")
    print(f"SMTP Port: {settings.EMAIL_PORT}")
    print(f"SMTP TLS: {settings.EMAIL_USE_TLS}")
    print(f"SMTP SSL: {settings.EMAIL_USE_SSL}")
    print(f"Default From: {settings.DEFAULT_FROM_EMAIL}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    
    if not rdns_name:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç rDNS –¥–ª—è IP —Å–µ—Ä–≤–µ—Ä–∞")
        print("   –†–ï–®–ï–ù–ò–ï: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ PTR –∑–∞–ø–∏—Å—å –¥–ª—è IP –≤ DNS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–µ")
        print(f"   –ù—É–∂–Ω–æ: {server_ip} -> mail.vashsender.ru")
    
    if server_ip not in mail_ips:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: IP —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç mail.vashsender.ru")
        print("   –†–ï–®–ï–ù–ò–ï: –û–±–Ω–æ–≤–∏—Ç–µ A –∑–∞–ø–∏—Å—å –¥–ª—è mail.vashsender.ru")
        print(f"   –ù—É–∂–Ω–æ: mail.vashsender.ru -> {server_ip}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ rDNS –∏ HELO
    if rdns_name and 'mail.vashsender.ru' not in rdns_name:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: rDNS –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç HELO")
        print("   –†–ï–®–ï–ù–ò–ï: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ rDNS —á—Ç–æ–±—ã –æ–Ω —Å–æ–¥–µ—Ä–∂–∞–ª mail.vashsender.ru")
        print(f"   –¢–µ–∫—É—â–∏–π rDNS: {rdns_name}")
        print("   –û–∂–∏–¥–∞–µ–º—ã–π: mail.vashsender.ru")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main() 